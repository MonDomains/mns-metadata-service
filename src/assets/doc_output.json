{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1-alpha.1",
    "title": "MNS Metadata Service",
    "description": "Set of endpoints to query MNS metadata and more.<br/><br/><b>Important:</b> While we have taken extensive measures to sanitize the user provided content, developers are advised to exercise caution when interacting with this API endpoint. In case of any advise or question, please reach us.",
    "contact": "support@monadns.com",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit"
    },
    "x-logo": {
      "url": "/assets/logo.svg",
      "backgroundColor": "#FFFFFF",
      "altText": "Monad Name Service"
    }
  },
  "paths": {
    "/{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}": {
      "get": {
        "description": "MNS NFT metadata",
        "parameters": [
          {
            "name": "networkName",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/networkName"
            }
          },
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/contractAddress"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tokenId"
            },
            "type": "string",
            "description": "Labelhash(v1) /Namehash(v2) of your MNS name.\n\nMore: https://docs.monadns.com/contract-api-reference/name-processing#hashing-names"
          }
        ],
        "responses": {
          "200": {
            "description": "Metadata object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MNSMetadata"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MNSMetadata"
                }
              }
            }
          },
          "404": {
            "description": "No results found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Unsupported network"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}/image": {
      "get": {
        "description": "MNS NFT image",
        "parameters": [
          {
            "name": "networkName",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/networkName"
            }
          },
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/contractAddress"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tokenId"
            },
            "type": "string",
            "description": "Labelhash(v1) /Namehash(v2) of your MNS name.\n\nMore: https://docs.monadns.com/contract-api-reference/name-processing#hashing-names"
          }
        ],
        "responses": {
          "200": {
            "description": "Image file"
          },
          "404": {
            "description": "No results found"
          },
          "501": {
            "description": "Unsupported network"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}/rasterize": {
      "get": {
        "description": "MNS NFT image rasterization",
        "parameters": [
          {
            "name": "networkName",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/networkName"
            }
          },
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/contractAddress"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tokenId"
            },
            "type": "string",
            "description": "Labelhash(v1) /Namehash(v2) of your MNS name.\n\nMore: https://docs.monadns.com/contract-api-reference/name-processing#hashing-names"
          },
          {
            "name": "res",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/res"
            },
            "type": "string",
            "description": "Resolution option for the rasterization. Available options: low (default) | high"
          }
        ],
        "responses": {
          "200": {
            "description": "Image file"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Unsupported network"
          }
        }
      }
    },
    "/{networkName}/avatar/{name}/meta": {
      "get": {
        "description": "MNS avatar metadata",
        "parameters": [
          {
            "name": "networkName",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/networkName"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/mnsName"
            },
            "description": "MNS name"
          }
        ],
        "responses": {
          "200": {
            "description": "Metadata object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarMetadata"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarMetadata"
                }
              }
            }
          },
          "404": {
            "description": "No results found"
          },
          "501": {
            "description": "Unsupported network"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/{networkName}/avatar/{name}": {
      "get": {
        "description": "MNS avatar image",
        "parameters": [
          {
            "name": "networkName",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/networkName"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/mnsName"
            },
            "description": "MNS name"
          }
        ],
        "responses": {
          "200": {
            "description": "Image file"
          },
          "404": {
            "description": "No results found"
          },
          "501": {
            "description": "Unsupported network"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/queryNFT": {
      "get": {
        "description": "Query endpoint for NFT URIs",
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "NFT URI as defined under CAIP-22 for erc721 assets and CAIP-29 for erc1155 assets.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFT metadata"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/preview/{name}": {
      "get": {
        "description": "MNS NFT preview",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "MNS name."
          }
        ],
        "responses": {
          "200": {
            "description": "Image file"
          },
          "404": {
            "description": "No results found"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "AvatarMetadata": {
        "value": {
          "$uri": "matoken.mon",
          "is_owner": true,
          "host_meta": {
            "chain_id": 1,
            "namespace": "erc721",
            "contract_address": "0x31385d3520bced94f77aae104b406994d8f2168c",
            "token_id": "9421",
            "reference_url": "https://opensea.io/assets/0x31385d3520bced94f77aae104b406994d8f2168c/9421"
          },
          "$name": "BASTARD GAN PUNK V2 #9421",
          "$description": "FOR THE CHANCES\nI HAVEN'T GOT A BURIAL IN MY ARMS\nAND I'VE HAD ENOUGH\nTIME IS NOW\nIT'S TIME\nI'VE GOT NOTHING TO PROVE\nI'VE GOT NOTHING TO LOSE\n",
          "$attributes": [
            {
              "trait_type": "HYPE TYPE",
              "value": "CALM AF (STILL)"
            },
            {
              "trait_type": "BASTARDNESS",
              "value": "FOMBOI BASTARD"
            },
            {
              "trait_type": "TYPE",
              "value": "LARGE"
            }
          ],
          "image": "https://ipfs.io/ipfs/QmRagxjj2No4T8gNCjpM42mLZGQE3ZwMYdTFUYe6e6LMBG"
        }
      },
      "MNSMetadata": {
        "value": {
          "$name": "nick.mon",
          "$description": "nick.mon, an MNS name.",
          "$attributes": [
            {
              "trait_type": "Created Date",
              "display_type": "date",
              "value": null
            },
            {
              "trait_type": "Length",
              "display_type": "number",
              "value": 4
            },
            {
              "trait_type": "Registration Date",
              "display_type": "date",
              "value": 1580803395000
            },
            {
              "trait_type": "Expiration Date",
              "display_type": "date",
              "value": 1698131707000
            }
          ],
          "name_length": 4,
          "url": "https://dapp.monadns.com/name/nick.mon",
          "version": 0,
          "background_image": "https://metadata.monadns.com/monad/avatar/nick.mon",
          "image_url": "https://metadata.monadns.com/monad/0x01BeCD733ea490CCDa8B5Caa97381E67BFA5249D/0x5d5727cb0fb76e4944eafb88ec9a3cf0b3c9025a4b2f947729137c5d7f84f68f/image"
        }
      }
    },
    "schemas": {
      "AvatarMetadata": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "example": "MNS name of avatar holder"
          },
          "is_owner": {
            "type": "string",
            "example": "Ownership verification of NFT"
          },
          "host_meta": {
            "type": "object",
            "properties": {
              "chain_id": {
                "type": "string",
                "example": "Chain ID where NFT resides"
              },
              "namespace": {
                "type": "string",
                "example": "Type of NFT contract"
              },
              "contract_address": {
                "type": "string",
                "example": "Contract address of NFT"
              },
              "token_id": {
                "type": "string",
                "example": "Token ID of NFT"
              },
              "res": {
                "type": "string",
                "example": "Resolution query parameter for rasterization"
              },
              "reference_url": {
                "type": "string",
                "example": "Marketplace URL of NFT"
              }
            }
          },
          "name": {
            "type": "string",
            "example": "Name of NFT"
          },
          "description": {
            "type": "string",
            "example": "Description of NFT"
          },
          "attributes": {
            "type": "string",
            "example": "Attributes of NFT"
          },
          "image": {
            "type": "string",
            "example": "Image data/URL of NFT"
          },
          "image_url": {
            "type": "string",
            "example": "Image data/URL of NFT"
          },
          "image_data": {
            "type": "string",
            "example": "Image data of NFT"
          },
          "background_color": {
            "type": "string",
            "example": "Background color of NFT"
          },
          "youtube_url": {
            "type": "string",
            "example": "Youtube URL of NFT"
          }
        },
        "required": [
          "uri",
          "name",
          "description",
          "attributes",
          "image"
        ],
        "xml": {
          "name": "AvatarMetadata"
        }
      },
      "MNSMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "MNS name"
          },
          "description": {
            "type": "string",
            "example": "Short MNS name description"
          },
          "attributes": {
            "type": "string",
            "example": "Custom traits about MNS"
          },
          "name_length": {
            "type": "string",
            "example": "Character length of mns name"
          },
          "url": {
            "type": "string",
            "example": "MNS App URL of the name"
          },
          "version": {
            "type": "string",
            "example": "MNS NFT version"
          },
          "background_image": {
            "type": "string",
            "example": "Origin URL of avatar image"
          },
          "image_url": {
            "type": "string",
            "example": "URL of MNS NFT image"
          }
        },
        "required": [
          "name",
          "description",
          "attributes",
          "name_length",
          "url",
          "version",
          "background_image",
          "image_url"
        ],
        "xml": {
          "name": "MNSMetadata"
        }
      },
      "contractAddress": {
        "type": "string",
        "example": "0x01BeCD733ea490CCDa8B5Caa97381E67BFA5249D",
        "xml": {
          "name": "contractAddress"
        }
      },
      "mnsName": {
        "type": "string",
        "example": "nick.mon",
        "xml": {
          "name": "mnsName"
        }
      },
      "tokenId": {
        "type": "string",
        "example": "4221908525551133525058944220830153...",
        "xml": {
          "name": "tokenId"
        }
      },
      "res": {
        "type": "string",
        "example": "high",
        "xml": {
          "name": "res"
        }
      },
      "networkName": {
        "description": "Name of the chain to query for.",
        "type": "string",
        "enum": [
          "monad",
          "monad-testnet"
        ],
        "xml": {
          "name": "networkName"
        }
      }
    }
  }
}